
Master
Nodes1
Nodes2
Nodes 3

Master -> inbcharge/governing body - it will have full vieqw of cluster and it will manage the deployments onto the nodes

{ KubeAPIServer, controller, Etcd, schedulers, kubectl, containerRuntime } -> These are the components of Master.

Note : Controller can be node, replication or other controllers as well.

KubeAPIServer -> the incoming and outgoing happens through KubeAPIServer, so Kubectl contacts the KubeAPIServer of master node to get the required information.

Scheduler -> 

ETCD -> it is a key value pair and it is where the state of the deployments is stored

POD is a automatic deployment unit which houses the working application code
There is somerthing called POD network which spawns across multiple nodes and this POD network is responsible for giving POD unique IP's.

container
    |
   POD
    |
   NODE

Kubernetes Documentation :

1. Install virtual box.  https://www.virtualbox.org/wiki/Downloads

2. Install Minikube
https://kubernetes.io/docs/home/

Learn how to use Kubernetes -> Install Minikube

C:\Users\Admin>clear
'clear' is not recognized as an internal or external command,
operable program or batch file.

C:\Users\Admin>cd ..

C:\Users>cd ..

C:\>cd kubernetes

C:\Kubernetes>minikube.exe start

C:\Kubernetes>minikube.exe start
* minikube v1.5.2 on Microsoft Windows 10 Enterprise 10.0.17763 Build 17763
* Automatically selected the 'virtualbox' driver
* Creating virtualbox VM (CPUs=2, Memory=2000MB, Disk=20000MB) ...
* Preparing Kubernetes v1.16.2 on Docker '18.09.9' ...
* Pulling images ...
* Launching Kubernetes ...
* Waiting for: apiserver
* Done! kubectl is now configured to use "minikube"
* For best results, install kubectl: https://kubernetes.io/docs/tasks/tools/install-kubectl/

3. Install Kubectl

https://kubernetes.io/docs/tasks/tools/install-kubectl/#install-kubectl-on-windows

copy the kubectl.exe into C:\Windows

C:\Kubernetes>kubectl.exe version
Client Version: version.Info{Major:"1", Minor:"16", GitVersion:"v1.16.0", GitCommit:"2bd9643cee5b3b3a5ecbd3af49d09018f0773c77", GitTreeState:"clean", BuildDate:"2019-09-18T14:36:53Z", GoVersion:"go1.12.9", Compiler:"gc", Platform:"windows/amd64"}
Server Version: version.Info{Major:"1", Minor:"16", GitVersion:"v1.16.2", GitCommit:"c97fe5036ef3df2967d086711e6c0c405941e14b", GitTreeState:"clean", BuildDate:"2019-10-15T19:09:08Z", GoVersion:"go1.12.10", Compiler:"gc", Platform:"linux/amd64"}



C:\Kubernetes>kubectl.exe get deployments
No resources found in default namespace.

C:\Kubernetes>kubectl create deployment hello-minikube --image=k8s.gcr.io/echoserver:1.10
deployment.apps/hello-minikube created

C:\Kubernetes>kubectl.exe get deployments
NAME             READY   UP-TO-DATE   AVAILABLE   AGE
hello-minikube   0/1     1            0           7s

C:\Kubernetes>kubectl.exe get all
NAME                                  READY   STATUS              RESTARTS   AGE
pod/hello-minikube-797f975945-s9s7d   0/1     ContainerCreating   0          15s

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   47m

NAME                             READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/hello-minikube   0/1     1            0           15s

NAME                                        DESIRED   CURRENT   READY   AGE
replicaset.apps/hello-minikube-797f975945   1         1         0       15s


C:\Kubernetes>kubectl.exe get pods
NAME                              READY   STATUS    RESTARTS   AGE
hello-minikube-797f975945-s9s7d   1/1     Running   0          75s

